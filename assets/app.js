angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","$rootScope","UserSvc",function(o,n,t){window.localStorage.token&&t.getUser().then(function(n){o.$emit("userLoggedIn",n.data)}),o.$on("userLoggedIn",function(n,t){o.currentUser=t})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(o,n){o.login=function(t,e){n.login(t,e).then(function(n){o.$emit("userLoggedIn",n.data)},function(n){o.loginValidation="Incorrect username & password combination"})}}]),angular.module("app").controller("PostsCtrl",["$scope","$http","PostsService",function(o,n,t){o.addPost=function(){var n=CKEDITOR.instances.editor1.getData();n&&t.send({body:n}).success(function(n){o.postBody=null})},o.$on("ws:new_post",function(n,t){o.$apply(function(){o.posts.unshift(t)})}),o.$on("$viewContentLoaded",function(){CKEDITOR.replace("editor1"),document.getElementById("post-simple-input").style.display="none"}),t.get().success(function(n){o.posts=n})}]),angular.module("app").service("PostsService",["$http",function(o){this.get=function(){return o.get("/api/posts")},this.send=function(n){return o.post("/api/posts",n)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(o,n){o.register=function(t,e,r){return e!=r?void(o.validationMessage="Your passwords did not match."):void n.register(t,e)}}]),angular.module("app").config(["$routeProvider",function(o){o.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(o){var n=this;n.getUser=function(){return o.defaults.headers.common["X-Auth"]=window.localStorage.token,o.get("/api/users").then(function(o){return o})},n.login=function(t,e){return o.post("/api/sessions",{username:t,password:e}).then(function(t){return window.localStorage.token=t.data,o.defaults.headers.common["X-Auth"]=t.data,n.getUser()})},n.register=function(t,e,r){return o.post("/api/users",{username:t,password:e}).then(function(o){return n.login(t,e).then(function(){window.location.href="/"})})},n.logout=function(){window.localStorage.removeItem("token")}}]),angular.module("app").run(["$rootScope","$timeout","$window",function(o,n,t){!function e(){var r="ws://"+t.location.host,s=new WebSocket(r);s.onopen=function(){console.log("Websocket connected")},s.onclose=function(o){console.log("Websocket closed. Trying to reconnect..."),n(e,1e4)},s.onmessage=function(n){console.log(n);var t=JSON.parse(n.data),e="ws:"+t.topic,r=t.data;console.log("broadcasting: "),o.$broadcast(e,r)}}()}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uQ3RybC5qcyIsImxvZ2luQ3J0bC5qcyIsInBvc3RzQ3RybC5qcyIsInBvc3RzU2VydmljZS5qcyIsInJlZ2lzdHJhdGlvbkN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1c2VyU2VydmljZS5qcyIsIndlYnNvY2tldHMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCIkcm9vdFNjb3BlIiwiVXNlclN2YyIsIndpbmRvdyIsImxvY2FsU3RvcmFnZSIsInRva2VuIiwiZ2V0VXNlciIsInRoZW4iLCJyZXNwb25zZSIsIiRlbWl0IiwiZGF0YSIsIiRvbiIsImV2ZW50IiwidXNlciIsImN1cnJlbnRVc2VyIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiZXJyb3IiLCJsb2dpblZhbGlkYXRpb24iLCIkaHR0cCIsIlBvc3RzU2VydmljZSIsImFkZFBvc3QiLCJja2VkaXRvcl9jb250ZW50IiwiQ0tFRElUT1IiLCJpbnN0YW5jZXMiLCJlZGl0b3IxIiwiZ2V0RGF0YSIsInNlbmQiLCJib2R5Iiwic3VjY2VzcyIsInBvc3QiLCJwb3N0Qm9keSIsIl8iLCIkYXBwbHkiLCJwb3N0cyIsInVuc2hpZnQiLCJyZXBsYWNlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInN0eWxlIiwiZGlzcGxheSIsImdldCIsInNlcnZpY2UiLCJ0aGlzIiwicmVnaXN0ZXIiLCJwYXNzd29yZF9jb25maXJtIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsInN2YyIsImRlZmF1bHRzIiwiaGVhZGVycyIsImNvbW1vbiIsInZhbCIsImxvY2F0aW9uIiwiaHJlZiIsImxvZ291dCIsInJlbW92ZUl0ZW0iLCJydW4iLCIkdGltZW91dCIsIiR3aW5kb3ciLCJjb25uZWN0IiwiaG9zdCIsImNvbm5lY3Rpb24iLCJXZWJTb2NrZXQiLCJvbm9wZW4iLCJjb25zb2xlIiwibG9nIiwib25jbG9zZSIsImUiLCJvbm1lc3NhZ2UiLCJtZXNzYWdlIiwiSlNPTiIsInBhcnNlIiwibmFtZSIsInRvcGljIiwiJGJyb2FkY2FzdCJdLCJtYXBwaW5ncyI6IkFBQ0FBLFFBQUFDLE9BQUEsT0FBQSxZQ0RBRCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsbUJBQUEsU0FBQSxhQUFBLFVBQUEsU0FBQUMsRUFBQUMsRUFBQUMsR0FPQUMsT0FBQUMsYUFBQUMsT0FDQUgsRUFBQUksVUFDQUMsS0FBQSxTQUFBQyxHQUNBUixFQUFBUyxNQUFBLGVBQUFELEVBQUFFLFFBSUFWLEVBQUFXLElBQUEsZUFBQSxTQUFBQyxFQUFBQyxHQUNBYixFQUFBYyxZQUFBRCxPQ2hCQWhCLFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxhQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBRSxHQUNBRixFQUFBZSxNQUFBLFNBQUFDLEVBQUFDLEdBQ0FmLEVBQUFhLE1BQUFDLEVBQUFDLEdBQ0FWLEtBQUEsU0FBQUMsR0FDQVIsRUFBQVMsTUFBQSxlQUFBRCxFQUFBRSxPQUVBLFNBQUFRLEdBQ0FsQixFQUFBbUIsZ0JBQUEsa0RDUkF0QixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxTQUFBLFFBQUEsZUFBQSxTQUFBQyxFQUFBb0IsRUFBQUMsR0FDQXJCLEVBQUFzQixRQUFBLFdBQ0EsR0FBQUMsR0FBQUMsU0FBQUMsVUFBQUMsUUFBQUMsU0FDQUosSUFDQUYsRUFBQU8sTUFDQUMsS0FBQU4sSUFFQU8sUUFBQSxTQUFBQyxHQU1BL0IsRUFBQWdDLFNBQUEsUUFLQWhDLEVBQUFXLElBQUEsY0FBQSxTQUFBc0IsRUFBQUYsR0FDQS9CLEVBQUFrQyxPQUFBLFdBQ0FsQyxFQUFBbUMsTUFBQUMsUUFBQUwsT0FJQS9CLEVBQUFXLElBQUEscUJBQUEsV0FFQWEsU0FBQWEsUUFBQSxXQUNBQyxTQUFBQyxlQUFBLHFCQUFBQyxNQUFBQyxRQUFBLFNBR0FwQixFQUFBcUIsTUFDQVosUUFBQSxTQUFBSyxHQUNBbkMsRUFBQW1DLE1BQUFBLE9DakNBdEMsUUFBQUMsT0FBQSxPQUNBNkMsUUFBQSxnQkFBQSxRQUFBLFNBQUF2QixHQUNBd0IsS0FBQUYsSUFBQSxXQUNBLE1BQUF0QixHQUFBc0IsSUFBQSxlQUVBRSxLQUFBaEIsS0FBQSxTQUFBRyxHQUNBLE1BQUFYLEdBQUFXLEtBQUEsYUFBQUEsT0NOQWxDLFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxnQkFBQSxTQUFBLFVBQUEsU0FBQUMsRUFBQUUsR0FDQUYsRUFBQTZDLFNBQUEsU0FBQTdCLEVBQUFDLEVBQUE2QixHQUNBLE1BQUE3QixJQUFBNkIsT0FDQTlDLEVBQUErQyxrQkFBQSxxQ0FHQTdDLEdBQUEyQyxTQUFBN0IsRUFBQUMsT0NQQXBCLFFBQUFDLE9BQUEsT0FDQWtELFFBQUEsaUJBQUEsU0FBQUMsR0FDQUEsRUFDQUMsS0FBQSxLQUFBbkQsV0FBQSxZQUFBb0QsWUFBQSxlQUNBRCxLQUFBLGFBQUFuRCxXQUFBLGVBQUFvRCxZQUFBLGtCQUNBRCxLQUFBLFVBQUFuRCxXQUFBLFlBQUFvRCxZQUFBLGtCQ0xBdEQsUUFBQUMsT0FBQSxPQUNBNkMsUUFBQSxXQUFBLFFBQUEsU0FBQXZCLEdBQ0EsR0FBQWdDLEdBQUFSLElBQ0FRLEdBQUE5QyxRQUFBLFdBRUEsTUFEQWMsR0FBQWlDLFNBQUFDLFFBQUFDLE9BQUEsVUFBQXBELE9BQUFDLGFBQUFDLE1BQ0FlLEVBQUFzQixJQUFBLGNBQ0FuQyxLQUFBLFNBQUFDLEdBQ0EsTUFBQUEsTUFHQTRDLEVBQUFyQyxNQUFBLFNBQUFDLEVBQUFDLEdBQ0EsTUFBQUcsR0FBQVcsS0FBQSxpQkFDQWYsU0FBQUEsRUFBQUMsU0FBQUEsSUFFQVYsS0FBQSxTQUFBaUQsR0FHQSxNQUZBckQsUUFBQUMsYUFBQUMsTUFBQW1ELEVBQUE5QyxLQUNBVSxFQUFBaUMsU0FBQUMsUUFBQUMsT0FBQSxVQUFBQyxFQUFBOUMsS0FDQTBDLEVBQUE5QyxhQUdBOEMsRUFBQVAsU0FBQSxTQUFBN0IsRUFBQUMsRUFBQTZCLEdBQ0EsTUFBQTFCLEdBQUFXLEtBQUEsY0FDQWYsU0FBQUEsRUFBQUMsU0FBQUEsSUFFQVYsS0FBQSxTQUFBaUQsR0FDQSxNQUFBSixHQUFBckMsTUFBQUMsRUFBQUMsR0FDQVYsS0FBQSxXQUNBSixPQUFBc0QsU0FBQUMsS0FBQSxTQUlBTixFQUFBTyxPQUFBLFdBQ0F4RCxPQUFBQyxhQUFBd0QsV0FBQSxhQ2hDQS9ELFFBQUFDLE9BQUEsT0FDQStELEtBQUEsYUFBQSxXQUFBLFVBQUEsU0FBQTVELEVBQUE2RCxFQUFBQyxJQUVBLFFBQUFDLEtBRUEsR0FBQUMsR0FBQSxRQUFBRixFQUFBTixTQUFBUSxLQUVBQyxFQUFBLEdBQUFDLFdBQUFGLEVBRUFDLEdBQUFFLE9BQUEsV0FDQUMsUUFBQUMsSUFBQSx3QkFJQUosRUFBQUssUUFBQSxTQUFBQyxHQUNBSCxRQUFBQyxJQUFBLDRDQUNBUixFQUFBRSxFQUFBLE1BR0FFLEVBQUFPLFVBQUEsU0FBQUQsR0FDQUgsUUFBQUMsSUFBQUUsRUFDQSxJQUFBRSxHQUFBQyxLQUFBQyxNQUFBSixFQUFBOUQsTUFFQW1FLEVBQUEsTUFBQUgsRUFBQUksTUFDQXBFLEVBQUFnRSxFQUFBaEUsSUFDQTJELFNBQUFDLElBQUEsa0JBRUFyRSxFQUFBOEUsV0FBQUYsRUFBQW5FIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vVGhpcyBmaWxlIG11c3QgYmUgdGhlIGZpcnN0IGluIHRoZSBsaXN0IHRvIGJlIGNvbmNhdGVuYXRlZFxuYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFsnbmdSb3V0ZSddKSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuXHQuY29udHJvbGxlcignQXBwbGljYXRpb25DdHJsJyAsIFtcIiRzY29wZVwiLCBcIiRyb290U2NvcGVcIiwgXCJVc2VyU3ZjXCIsIGZ1bmN0aW9uICgkc2NvcGUsICRyb290U2NvcGUsIFVzZXJTdmMpIHtcblx0XHQvKlxuXHRcdElmIHdlIGhhdmUgYSBzdG9yZWQgdG9rZW4sIGdldCB0aGUgdXNlciBpbmZvcm1hdGlvbiBmcm9tIGl0XG5cdFx0YW5kIGVtaXQgdGhlIHVzZXIgbG9nZ2VkaW4gbWVzc2FnZXMgaW4gb3JkZXIgdG8gYWxsb3cgdGhlIFVJIHRvIFxuXHRcdGluZGljYXRlIHRvIHRoZSB1c2VyIHRoYXQgdGhleSB3ZXJlIGxvZ2dlZCBpblxuXHRcdCovXG5cdFx0XG5cdFx0aWYgKHdpbmRvdy5sb2NhbFN0b3JhZ2UudG9rZW4pIHtcblx0XHRcdFVzZXJTdmMuZ2V0VXNlcigpXG5cdFx0XHRcdC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSl7XG5cdFx0XHRcdFx0JHNjb3BlLiRlbWl0KCd1c2VyTG9nZ2VkSW4nLCByZXNwb25zZS5kYXRhKTtcblx0XHRcdFx0fSlcblx0XHR9XG5cblx0XHQkc2NvcGUuJG9uKCd1c2VyTG9nZ2VkSW4nLCBmdW5jdGlvbihldmVudCwgdXNlcikge1xuXHRcdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlcjtcblx0XHR9KVxuXHR9XSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcblx0LmNvbnRyb2xsZXIoJ0xvZ2luQ3RybCcgLCBbXCIkc2NvcGVcIiAsIFwiVXNlclN2Y1wiICwgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2Yykge1xuXHRcdCRzY29wZS5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcblx0XHRcdFVzZXJTdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuXHRcdFx0XHQudGhlbihmdW5jdGlvbiAocmVzcG9uc2Upe1xuXHRcdFx0XHRcdCRzY29wZS4kZW1pdCgndXNlckxvZ2dlZEluJywgcmVzcG9uc2UuZGF0YSk7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGZ1bmN0aW9uKGVycm9yKXtcblx0XHRcdFx0ICAkc2NvcGUubG9naW5WYWxpZGF0aW9uID0gJ0luY29ycmVjdCB1c2VybmFtZSAmIHBhc3N3b3JkIGNvbWJpbmF0aW9uJztcblx0XHRcdFx0fSlcblx0XHR9XG5cdH1dKSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuXHQuY29udHJvbGxlcignUG9zdHNDdHJsJywgW1wiJHNjb3BlXCIgLCBcIiRodHRwXCIsIFwiUG9zdHNTZXJ2aWNlXCIsIGZ1bmN0aW9uICgkc2NvcGUsICRodHRwLCBQb3N0c1NlcnZpY2UpIHtcblx0XHQkc2NvcGUuYWRkUG9zdCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBja2VkaXRvcl9jb250ZW50ID0gQ0tFRElUT1IuaW5zdGFuY2VzLmVkaXRvcjEuZ2V0RGF0YSgpO1xuXHRcdFx0aWYgKGNrZWRpdG9yX2NvbnRlbnQpIHtcblx0XHRcdFx0UG9zdHNTZXJ2aWNlLnNlbmQoe1xuXHRcdFx0XHRcdGJvZHk6IGNrZWRpdG9yX2NvbnRlbnRcblx0XHRcdFx0fSlcblx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3QpIHtcblx0XHRcdFx0XHQvKlxuXHRcdFx0XHRcdC8vUmVtb3ZlZCBhcyB3ZWJzb2NrZXQgYnJvYWRjYXN0IHdvdWxkIGNhdXNlIHRoZSBwb3N0IHRvIGFwcGVhciBkdXBsaWNhdGVkIG9uIHRoZSBicm93c2VyIHRoYXQgaXQgd2FzIHBvc3RlZCBmcm9tIFxuXHRcdFx0XHRcdC8vYXMgYm90aCBvZiB0aGUgZnVuY3Rpb25zIHdvdWxkIGdldCBleGVjdXRlZCBiZWNhdXNlIHRoZSBjbGllbnQgd2hvIHNlbmRzIHRoZSBwb3N0IHdvdWxkIHN0aWxsIHJlY2lldmUgdGhlIHdlYnNvY2tldHMgYnJvYWRjYXN0IGJhY2sgZnJvbSB0aGUgc2VydmVyICBcblx0XHRcdFx0XHQqL1xuXHRcdFx0XHRcdC8vJHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdCk7IFxuXHRcdFx0XHRcdCRzY29wZS5wb3N0Qm9keSA9IG51bGw7XG5cdFx0XHRcdH0pXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0JHNjb3BlLiRvbignd3M6bmV3X3Bvc3QnLCBmdW5jdGlvbihfLCBwb3N0KSB7XG5cdFx0XHQkc2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0JHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdCk7XG5cdFx0XHR9KVxuXHRcdH0pXG5cblx0XHQkc2NvcGUuJG9uKCckdmlld0NvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbigpe1xuXHRcdFx0Ly90aGUgcGFnZSBpcyByZWFkeVxuICAgICAgICAgICAgQ0tFRElUT1IucmVwbGFjZSgnZWRpdG9yMScpO1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Bvc3Qtc2ltcGxlLWlucHV0Jykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0XHR9KTtcblxuXHRQb3N0c1NlcnZpY2UuZ2V0KClcblx0XHQuc3VjY2VzcyhmdW5jdGlvbiAocG9zdHMpIHtcblx0XHRcdCRzY29wZS5wb3N0cyA9IHBvc3RzO1xuXHRcdH0pXG5cblx0fV0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG5cdC5zZXJ2aWNlKCdQb3N0c1NlcnZpY2UnLCBbXCIkaHR0cFwiICwgZnVuY3Rpb24gKCRodHRwKSB7XG5cdFx0dGhpcy5nZXQgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzJyk7XG5cdFx0fVxuXHRcdHRoaXMuc2VuZCA9IGZ1bmN0aW9uIChwb3N0KSB7XG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9wb3N0cycsIHBvc3QpO1xuXHRcdH1cblx0fV0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG5cdC5jb250cm9sbGVyKCdSZWdpc3RlckN0cmwnICwgW1wiJHNjb3BlXCIgLCBcIlVzZXJTdmNcIiAsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcblx0XHQkc2NvcGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkLCBwYXNzd29yZF9jb25maXJtKSB7XG5cdFx0XHRpZiAocGFzc3dvcmQgIT0gcGFzc3dvcmRfY29uZmlybSkge1xuXHRcdFx0XHQkc2NvcGUudmFsaWRhdGlvbk1lc3NhZ2UgPSAnWW91ciBwYXNzd29yZHMgZGlkIG5vdCBtYXRjaC4nO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRVc2VyU3ZjLnJlZ2lzdGVyKHVzZXJuYW1lLCBwYXNzd29yZClcblx0XHR9XG5cdH1dKSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuXHQuY29uZmlnKFtcIiRyb3V0ZVByb3ZpZGVyXCIgLGZ1bmN0aW9uICgkcm91dGVQcm92aWRlcikge1xuXHRcdCRyb3V0ZVByb3ZpZGVyXG5cdFx0XHQud2hlbignLycgLCB7Y29udHJvbGxlcjogJ1Bvc3RzQ3RybCcsIHRlbXBsYXRlVXJsOiAncG9zdHMuaHRtbCd9KVxuXHRcdFx0LndoZW4oJy9yZWdpc3RlcicgLCB7Y29udHJvbGxlcjogJ1JlZ2lzdGVyQ3RybCcsIHRlbXBsYXRlVXJsOiAncmVnaXN0ZXIuaHRtbCd9KVxuXHRcdFx0LndoZW4oJy9sb2dpbicgLCB7Y29udHJvbGxlcjogJ0xvZ2luQ3RybCcsIHRlbXBsYXRlVXJsOiAnbG9naW4uaHRtbCd9KVxuXHR9XSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcblx0LnNlcnZpY2UoJ1VzZXJTdmMnLCBbXCIkaHR0cFwiLCBmdW5jdGlvbigkaHR0cCkge1xuXHRcdHZhciBzdmMgPSB0aGlzO1xuXHRcdHN2Yy5nZXRVc2VyID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0JGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ1gtQXV0aCddID0gd2luZG93LmxvY2FsU3RvcmFnZS50b2tlblxuXHRcdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycpXG5cdFx0XHQudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgIFx0XHRcdHJldHVybiByZXNwb25zZVxuICAgIFx0XHR9KVxuXHRcdH1cblx0XHRzdmMubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcblx0XHRcdFx0dXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmRcblx0XHRcdH0pXG5cdFx0XHQudGhlbihmdW5jdGlvbiAodmFsKSB7XG5cdFx0XHRcdHdpbmRvdy5sb2NhbFN0b3JhZ2UudG9rZW4gPSB2YWwuZGF0YTtcblx0XHRcdFx0JGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ1gtQXV0aCddID0gdmFsLmRhdGFcblx0XHRcdFx0cmV0dXJuIHN2Yy5nZXRVc2VyKCk7XG5cdFx0XHR9KVxuXHRcdH1cblx0XHRzdmMucmVnaXN0ZXIgPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkLCBwYXNzd29yZF9jb25maXJtKSB7XG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS91c2VycycsIHtcblx0XHRcdFx0dXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmRcblx0XHRcdH0pXG5cdFx0XHQudGhlbihmdW5jdGlvbiAodmFsKSB7XG5cdFx0XHRcdHJldHVybiBzdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuXHRcdFx0XHRcdC50aGVuKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHR3aW5kb3cubG9jYXRpb24uaHJlZj0gJy8nO1x0XG5cdFx0XHRcdFx0fSlcblx0XHRcdH0pXG5cdFx0fVxuXHRcdHN2Yy5sb2dvdXQgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHR3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3Rva2VuJyk7XG5cdFx0fVxuXHR9XSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5ydW4oW1wiJHJvb3RTY29wZVwiLCBcIiR0aW1lb3V0XCIgLCBcIiR3aW5kb3dcIiAsIGZ1bmN0aW9uICgkcm9vdFNjb3BlLCAkdGltZW91dCwgJHdpbmRvdykge1xuXHRcblx0KGZ1bmN0aW9uIGNvbm5lY3QoKXtcblx0XHQvL0NyZWF0ZSBhIHdlYnNvY2tldCBjb25uZWN0aW9uIHdpdGggdGhlIHNlcnZlclxuXHRcdHZhciBob3N0ID0gXCJ3czovL1wiICsgJHdpbmRvdy5sb2NhdGlvbi5ob3N0XG5cdFx0ICBcblx0XHR2YXIgY29ubmVjdGlvbiA9IG5ldyBXZWJTb2NrZXQoaG9zdClcblxuXHRcdGNvbm5lY3Rpb24ub25vcGVuID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0Y29uc29sZS5sb2coJ1dlYnNvY2tldCBjb25uZWN0ZWQnKVxuXHRcdH1cblxuXG5cdFx0Y29ubmVjdGlvbi5vbmNsb3NlID0gZnVuY3Rpb24gKGUpIHtcblx0XHRcdGNvbnNvbGUubG9nKCdXZWJzb2NrZXQgY2xvc2VkLiBUcnlpbmcgdG8gcmVjb25uZWN0Li4uJylcblx0XHRcdCR0aW1lb3V0KGNvbm5lY3QsIDEwKjEwMDApO1xuXHRcdH0gXG5cblx0XHRjb25uZWN0aW9uLm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChlKSB7XG5cdFx0XHRjb25zb2xlLmxvZyhlKTtcblx0XHRcdHZhciBtZXNzYWdlID0gSlNPTi5wYXJzZShlLmRhdGEpO1xuXHRcdFx0XG5cdFx0XHR2YXIgbmFtZSA9ICd3czonICsgbWVzc2FnZS50b3BpYztcblx0XHRcdHZhciBkYXRhID0gbWVzc2FnZS5kYXRhO1xuXHRcdFx0Y29uc29sZS5sb2coXCJicm9hZGNhc3Rpbmc6IFwiKTtcblxuXHRcdFx0JHJvb3RTY29wZS4kYnJvYWRjYXN0KG5hbWUsIGRhdGEpO1xuXHRcdH1cblx0fSkoKVxufV0pIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9