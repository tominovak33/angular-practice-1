angular.module("app",["ngRoute","ngAnimate"]),angular.module("app").controller("ApplicationCtrl",["$scope","$rootScope","UserSvc",function(t,o,n){window.localStorage.token&&n.getUser().then(function(o){t.$emit("userLoggedIn",o.data)}),t.$on("userLoggedIn",function(o,n){t.currentUser=n})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,o){t.login=function(n,e){o.login(n,e).then(function(o){t.$emit("userLoggedIn",o.data),window.location.href="#/"},function(o){t.loginValidation="Incorrect username & password combination"})},t.logout=function(){o.logout()}}]),angular.module("app").controller("PostsCtrl",["$scope","$http","PostsService",function(t,o,n){t.posts=[],t.addPost=function(){var o=CKEDITOR.instances.editor1.getData();o&&n.send({body:o,title:t.postTitle}).success(function(o){t.postBody=null,CKEDITOR.instances.editor1.setData(""),t.postTitle=null})},t.init_ckedit=function(){CKEDITOR.replace("editor1")},t.$on("ws:new_post",function(o,n){n=n[0],t.$apply(function(){t.posts.unshift(n)})}),t.$on("$viewContentLoaded",function(){}),t.paginate=function(){t.currentPage=0,t.postsPerPage=5,t.pagedPosts=[],t.numberOfPages=function(){return Math.ceil(t.posts.length/t.postsPerPage)};var o=t.currentPage*t.postsPerPage,n=o+t.postsPerPage;t.pagedPosts=t.posts.slice(o,n),console.log(t.pagedPosts)},n.get().success(function(o){t.posts=o,t.paginate()})}]).filter("output_html",["$sce",function(t){return function(o){return t.trustAsHtml(o)}}]),angular.module("app").service("PostsService",["$http",function(t){this.get=function(){return t.get("/api/posts")},this.send=function(o){return t.post("/api/posts",o)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(t,o){t.register=function(n,e,r){return e!=r?void(t.validationMessage="Your passwords did not match."):void o.register(n,e)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/logout",{controller:"LoginCtrl",templateUrl:"logout.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var o=this;o.getUser=function(){return t.defaults.headers.common["X-Auth"]=window.localStorage.token,t.get("/api/users").then(function(t){return t})},o.login=function(n,e){return t.post("/api/sessions",{username:n,password:e}).then(function(n){return window.localStorage.token=n.data,t.defaults.headers.common["X-Auth"]=n.data,o.getUser()})},o.register=function(n,e,r){return t.post("/api/users",{username:n,password:e}).then(function(t){return o.login(n,e).then(function(){window.location.href="/"})})},o.logout=function(){window.localStorage.removeItem("token"),window.location.href="/"}}]),angular.module("app").run(["$rootScope","$timeout","$window",function(t,o,n){!function e(){var r="ws://"+n.location.host,s=new WebSocket(r);s.onopen=function(){},s.onclose=function(t){o(e,1e4)},s.onmessage=function(o){var n=JSON.parse(o.data),e="ws:"+n.topic,r=n.data;t.$broadcast(e,r)}}()}]);
//# sourceMappingURL=data:application/json;base64,