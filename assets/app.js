angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","$rootScope","UserSvc",function(o,n,t){window.localStorage.token&&t.getUser().then(function(n){o.$emit("userLoggedIn",n.data)}),o.$on("userLoggedIn",function(n,t){o.currentUser=t}),o.$on("$viewContentLoaded",function(){CKEDITOR.replace("editor1")})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(o,n){o.login=function(t,e){n.login(t,e).then(function(n){o.$emit("userLoggedIn",n.data)},function(n){o.loginValidation="Incorrect username & password combination"})}}]),angular.module("app").controller("PostsCtrl",["$scope","$http","PostsService",function(o,n,t){o.addPost=function(){o.postBody&&t.send({username:"tomi",body:CKEDITOR.instances.editor1.getData()}).success(function(n){o.postBody=null})},o.$on("ws:new_post",function(n,t){o.$apply(function(){o.posts.unshift(t)})}),t.get().success(function(n){o.posts=n})}]),angular.module("app").service("PostsService",["$http",function(o){this.get=function(){return o.get("/api/posts")},this.send=function(n){return o.post("/api/posts",n)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(o,n){o.register=function(t,e,r){return e!=r?void(o.validationMessage="Your passwords did not match."):void n.register(t,e)}}]),angular.module("app").config(["$routeProvider",function(o){o.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(o){var n=this;n.getUser=function(){return o.get("/api/users",{headers:{"X-Auth":window.localStorage.token}})},n.login=function(t,e){return o.post("/api/sessions",{username:t,password:e}).then(function(t){return window.localStorage.token=t.data,o.defaults.headers.common["X-Auth"]=t.data,n.getUser()})},n.register=function(t,e,r){return o.post("/api/users",{username:t,password:e}).then(function(o){return n.login(t,e).then(function(){window.location.href="/"})})},n.logout=function(){window.localStorage.removeItem("token")}}]),angular.module("app").run(["$rootScope","$timeout","$window",function(o,n,t){!function e(){var r="ws://"+t.location.host,s=new WebSocket(r);s.onopen=function(){console.log("Websocket connected")},s.onclose=function(o){console.log("Websocket closed. Trying to reconnect..."),n(e,1e4)},s.onmessage=function(n){console.log(n);var t=JSON.parse(n.data),e="ws:"+t.topic,r=t.data;console.log("broadcasting: "),o.$broadcast(e,r)}}()}]);
//# sourceMappingURL=data:application/json;base64,